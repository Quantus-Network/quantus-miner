# Drop-in override: conservative CPU affinity for shared hardware (node + miner)
# Place this file at:
#   /etc/systemd/system/quantus-miner.service.d/10-shared-hardware.conf
#
# Then reload and restart:
#   sudo systemctl daemon-reload
#   sudo systemctl restart quantus-miner
#
# Rationale:
# - On shared hosts where the node and miner co-exist, bind the miner to a subset
#   of logical CPUs, leaving the remainder for the node (and the OS scheduler).
# - Use a slightly lower CPU priority and moderate CPU weight so the node remains
#   responsive under load.
#
# Notes:
# - CPUAffinity must be a subset of the service’s allowed cpuset (e.g., cgroups).
# - The miner logs the detected cpuset mask at startup and, when metrics are enabled,
#   exports a miner_effective_cpus gauge for dashboards.
# - Adjust the CPU list and worker count to match your hardware and cpuset.
#
# Example below assumes an 8‑way logical CPU system (IDs 0‑7).
# Reserve CPUs 0‑3 for the node and bind the miner to CPUs 4‑7.

[Service]
# Bind miner to specific CPUs (edit to match your topology).
# Check `lscpu` and any cpuset constraints (cgroup v2: /sys/fs/cgroup/cpuset.cpus.effective).
CPUAffinity=4 5 6 7

# Keep the node responsive; slightly lower miner priority (higher niceness value).
Nice=5

# If using cgroup v2, weight the miner below default (1–10000, default ~100).
# This helps the node compete for CPU on shared hardware.
CPUWeight=70

# I/O scheduling: best-effort with moderate priority.
IOSchedulingClass=best-effort
IOSchedulingPriority=4

# Default time-sharing policy is fine for CPU-bound workloads when pinned.
CPUSchedulingPolicy=other

# Optional: pin worker count and enable metrics (uncomment and adjust as needed).
# Environment=MINER_ENGINE=cpu-fast
# Environment=MINER_WORKERS=4
# Environment=MINER_METRICS_PORT=9900
# Environment=RUST_LOG=info,miner=debug

# Optional: tighten memory/task limits if desired (ensure they fit your environment).
# MemoryAccounting=true
# TasksAccounting=true
# MemoryMax=infinity
# TasksMax=infinity
