# NVIDIA RTX 3060 — G2 device path (lower-block example: 28 blocks)
# Launch shape targets ~1× SMs (28 SMs → 28 blocks) with 256 threads/block.
# This configuration uses the G2 kernel (device SHA3 + early-exit).
#
# Notes:
# - Increase/decrease ITERS to balance kernel duration vs early-exit responsiveness.
# - Pinned host buffers are harmless here (G2 doesn’t do large copy-backs) but left enabled.
# - If the embedded G2 kernel isn’t available, the engine will fall back to G1 automatically.
# - Keep your service at --workers 1 to avoid multiple concurrent launches on a single GPU.
#
# Blocks = MINER_CUDA_THREADS / MINER_CUDA_BLOCK_DIM
# For 28 blocks with 256 threads/block: 28 * 256 = 7168 threads.

# Threads per block (warp multiple; 256 is a solid default)
MINER_CUDA_BLOCK_DIM=256

# Total threads = blocks * threads_per_block → 28 * 256 = 7168 (28 blocks)
MINER_CUDA_THREADS=7168

# Iterations per thread
# G2 guidance on Ampere 3060: start around 2048; increase for longer kernels while preserving early-exit responsiveness.
MINER_CUDA_ITERS=2048

# Use pinned (page-locked) host buffers (harmless in G2; helps if we fall back to G1)
MINER_CUDA_PINNED=1

# Select G2 kernel (device SHA3 + threshold + early-exit)
MINER_CUDA_MODE=g2

# Optional: force embedded image selection (default prefers cubin)
# MINER_CUDA_IMAGE=cubin
# MINER_CUDA_IMAGE=ptx

# Optional: host SHA3 workers (only used if engine falls back to G1)
# MINER_CUDA_HASH_THREADS=24

# Optional: logging verbosity
# RUST_LOG=info
